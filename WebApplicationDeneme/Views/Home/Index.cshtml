@using WebApplicationDeneme.Models
@model IEnumerable<WebApplicationDeneme.Models.Blog>

@{
    ViewData["Title"] = "Home";

    var sliders = ViewBag.Sliders as IEnumerable<dynamic>;
    var refs = ViewBag.References as List<Reference> ?? new List<Reference>();

    string SafeText(object? x, string fallback) => x is string s && !string.IsNullOrWhiteSpace(s) ? s : fallback;
    string SafeUrl(object? x, string fallback) => Url.Content(SafeText(x, fallback));
}

<style>
    /* === HERO SLIDER === */
    .hero {
        border-radius: 20px;
        overflow: hidden;
        position: relative;
        background: linear-gradient(135deg,#13547a,#80d0c7);
    }

        .hero .carousel-item {
            height: 420px;
            background: #0b2239;
            position: relative;
        }

            .hero .carousel-item > img {
                position: absolute;
                inset: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
                opacity: .45;
            }

        .hero .caption {
            position: relative;
            z-index: 2;
            color: #fff;
            text-shadow: 0 2px 16px rgba(0,0,0,.35);
        }

    /* === BLOGS === */
    .blog-card img {
        aspect-ratio: 16/9;
        object-fit: cover;
    }

    .blog-card {
        transition: transform .2s, box-shadow .2s;
    }

        .blog-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 24px rgba(0,0,0,.08);
        }

    /* === REFERANSLAR === tam genişlik + şartlı infinite scroll */
    .logos-wrap {
        width: 100%;
    }

    .logos-marquee {
        position: relative;
        overflow: hidden;
        padding: 1rem 0;
    }

    .logos-track {
        display: flex;
        align-items: center;
        gap: 48px;
        width: max-content;
    }

        .logos-track.animate {
            animation: logos-scroll 18s linear infinite;
        }

    .logos-item {
        flex: 0 0 auto;
        display: grid;
        place-items: center;
        height: 120px; /* 80 → 120 yapıldı */
        padding: 0 14px;
        opacity: .9;
        filter: grayscale(25%);
        transition: opacity .2s, filter .2s, transform .2s;
    }

        .logos-item img {
            max-height: 80px; /* 64 → 100 yapıldı */
            width: auto;
        }

        .logos-item:hover {
            opacity: 1;
            filter: none;
            transform: translateY(-2px);
        }

    @@keyframes logos-scroll {
        from

    {
        transform: translateX(0);
    }

    to {
        transform: translateX(-50%);
    }

    }
</style>

<div class="container py-4">

    <!-- HERO SLIDER -->
    <div id="homeHero" class="carousel slide hero mb-5" data-bs-ride="carousel" data-bs-interval="6000" data-bs-pause="hover">
        <div class="carousel-indicators">
            @{
                var hasSlides = sliders != null && sliders.Any();
                if (hasSlides)
                {
                    var i = 0;
                    foreach (var _ in sliders!)
                    {
                        <button type="button" data-bs-target="#homeHero" data-bs-slide-to="@i" class="@(i == 0 ? "active" : null)" aria-current="@(i == 0 ? "true" : null)" aria-label="Slide @(i + 1)"></button>
                        ;
                        i++;
                    }
                }
                else
                {
                    <button type="button" data-bs-target="#homeHero" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                }
            }
        </div>

        <div class="carousel-inner">
            @if (sliders != null && sliders.Any())
            {
                var first = true;
                foreach (var s in sliders)
                {
                    var img = SafeUrl(s?.ImagePath, "~/assets/img/hero-default.jpg");
                    var head = SafeText(s?.Heading, "Güçlü, Modern, Güvenli");
                    var text = SafeText(s?.Text, "İhtiyaca göre özelleştirilen yazılım ve veri çözümleri.");
                    var ltxt = SafeText(s?.LinkText, "İletişime Geç");
                    var lurl = (s?.LinkUrl as string) ?? "";

                    <div class="carousel-item @(first ? "active" : "")">
                        <img src="@img" alt="@head" loading="eager">
                        <div class="container h-100 d-flex align-items-center">
                            <div class="caption">
                                <h1 class="display-5 fw-bold mb-3">@head</h1>
                                <p class="lead mb-4" style="max-width: 720px;">@text</p>
                                @if (!string.IsNullOrWhiteSpace(lurl))
                                {
                                    <a class="btn btn-light btn-lg rounded-pill px-4" href="@lurl">@ltxt</a>
                                }
                            </div>
                        </div>
                    </div>
                    first = false;
                }
            }
            else
            {
                <div class="carousel-item active">
                    <img src="~/assets/img/hero-default.jpg" alt="TEST APPLICATION" loading="eager">
                    <div class="container h-100 d-flex align-items-center">
                        <div class="caption">
                            <h1 class="display-5 fw-bold mb-3">TEST APPLICATION</h1>
                            <p class="lead mb-4" style="max-width: 720px;">Şeffaf, güvenli ve kullanıcı odaklı çözümler.</p>
                            <a class="btn btn-light btn-lg rounded-pill px-4" href="/About">Hakkımızda</a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <button class="carousel-control-prev" type="button" data-bs-target="#homeHero" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
            <span class="visually-hidden">Önceki</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#homeHero" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
            <span class="visually-hidden">Sonraki</span>
        </button>
    </div>

    <!-- SON BLOGLAR -->
    <section class="mb-5">
        <div class="d-flex align-items-end justify-content-between mb-3">
            <h2 class="mb-0">Son Eklenen Bloglar</h2>
            <a asp-controller="Blogs" asp-action="Index" class="btn btn-outline-primary btn-sm">Tüm Bloglar</a>
        </div>

        <div class="row g-4">
            @foreach (var blog in (Model ?? Enumerable.Empty<Blog>()).Take(3))
            {
                var blogImg = string.IsNullOrWhiteSpace(blog.ImagePath) ? "~/assets/img/blog-default.jpg" : blog.ImagePath;
                <div class="col-md-4">
                    <div class="card blog-card h-100 border-0 shadow-sm">
                        <img src="@Url.Content(blogImg)" class="card-img-top" alt="@blog.Title" loading="lazy" />
                        <div class="card-body">
                            <h5 class="card-title">@blog.Title</h5>
                            <p class="card-text text-muted">@blog.ShortText</p>
                            <a asp-controller="Blogs" asp-action="Details" asp-route-id="@blog.Id" class="btn btn-primary">Devamını Oku</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>

</div> <!-- /.container -->
<!-- REFERANSLAR: tam genişlik (container dışı), 5+ ise sonsuz kayma -->
@if (refs.Any())
{
    <section class="mb-5 logos-wrap">
        <div class="container mb-2">
            <h3 class="mb-0">Referanslarımız</h3>
        </div>

        <div class="logos-marquee">
            <div class="logos-track @(refs.Count >= 5 ? "animate" : "")">
                @foreach (var r in refs)
                {
                    var rimg = string.IsNullOrWhiteSpace(r.ImagePath) ? "~/assets/img/brands/brand-1.svg" : r.ImagePath;
                    <div class="logos-item">
                        <img src="@Url.Content(rimg)" alt="@r.Name" loading="lazy" />
                    </div>
                }

                @* 5 ve fazlaysa sonsuz döngü için tekrar ekle *@
                @if (refs.Count >= 5)
                {
                    foreach (var r in refs)
                    {
                        var rimg = string.IsNullOrWhiteSpace(r.ImagePath) ? "~/assets/img/brands/brand-1.svg" : r.ImagePath;
                        <div class="logos-item">
                            <img src="@Url.Content(rimg)" alt="@r.Name" loading="lazy" />
                        </div>
                    }
                }
            </div>
        </div>
    </section>
}
